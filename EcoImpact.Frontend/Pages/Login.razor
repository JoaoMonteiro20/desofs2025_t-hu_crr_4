@page "/"
@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Login</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p style="color: red">@ErrorMessage</p>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <InputText @bind-Value="loginModel.UserName" placeholder="Username" />
    <br />
    <InputText @bind-Value="loginModel.Password" type="password" placeholder="Password" />
    <br />
    <button type="submit">Login</button>
</EditForm>
<p>
    Ainda não tens conta?
    <NavLink href="/register">Regista-te aqui</NavLink>
</p>

@code {
    private LoginRequest loginModel = new();
    private string? ErrorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var success = await AuthService.LoginAsync(loginModel);
            if (success)
            {
                ErrorMessage = null;
                NavigationManager.NavigateTo("/home");
            }
            else
            {
                ErrorMessage = "Credenciais inválidas.";
            }
        }
        catch (Exception ex)
        {
            // Mostra erro de bloqueio, se aplicável
            ErrorMessage = ex.Message;
        }
    }
}