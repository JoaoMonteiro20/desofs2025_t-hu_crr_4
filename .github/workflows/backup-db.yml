name: Scheduled DB Backup

on:
  push:
    branches: [ resolve-dast ] 
  schedule:
    - cron: '0 3 * * 0'  
  workflow_dispatch:

jobs:
  db-backup:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        ports:
          - 1433:1433
        env:
          SA_PASSWORD: "YourStrong!Passw0rd"
          ACCEPT_EULA: "Y"

    steps:
      - name: Esperar 20s para SQL arrancar
        run: sleep 20

      - name: Verificar alterações na BD
        run: |
          HAS_CHANGES=$(docker exec $(docker ps -q -f ancestor=mcr.microsoft.com/mssql/server:2022-latest) \
            /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" \
            -Q "SELECT CASE WHEN EXISTS (SELECT 1 FROM ChangesLog WHERE Date >= DATEADD(DAY, -7, GETDATE())) THEN 'yes' ELSE 'no' END")
          
          echo "CHANGES_FOUND=$HAS_CHANGES" >> $GITHUB_ENV

      - name: Criar pasta de backup
        if: env.CHANGES_FOUND == 'yes'
        run: mkdir -p sql-backup

      - name: Executar backup
        if: env.CHANGES_FOUND == 'yes'
        run: |
          docker exec $(docker ps -q -f ancestor=mcr.microsoft.com/mssql/server:2022-latest) \
          /opt/mssql-tools/bin/sqlcmd \
          -S localhost -U sa -P "YourStrong!Passw0rd" \
          -Q "BACKUP DATABASE EcoImpactDB TO DISK = '/var/opt/mssql/backup/ecoimpact.bak'"

      - name: Guardar artefacto do backup
        if: env.CHANGES_FOUND == 'yes'
        uses: actions/upload-artifact@v4
        with:
          name: ecoimpact-db-backup
          path: /var/opt/mssql/backup/ecoimpact.bak
