name: SonarCloud Analysis - SAST

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-analyze:
    name: Build & Analyze with SonarCloud
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .sonar/scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner

      - name: Begin SonarCloud analysis
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .sonar/scanner/dotnet-sonarscanner begin `
            /k:"JoaoMonteiro20_desofs2025_t-hu_crr_4" `
            /o:"joaomonteiro20" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="EcoImpact.Tests/TestResults/coverage.opencover.xml"

      - name: Restore dependencies
        run: dotnet restore EcoImpactSimulator.sln

      - name: Build
        run: dotnet build EcoImpactSimulator.sln --no-restore --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test EcoImpact.Tests/EcoImpact.Tests.csproj `
            --no-build `
            --configuration Release `
            --collect:"XPlat Code Coverage"

      - name: Rename coverage file to expected path
        shell: powershell
        run: |
          Get-ChildItem -Recurse -Filter "coverage.cobertura.xml" | Select-Object -First 1 | Copy-Item -Destination "EcoImpact.Tests/TestResults/coverage.opencover.xml"

      - name: List TestResults folder (debug)
        run: dir EcoImpact.Tests/TestResults

      - name: End SonarCloud analysis
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .sonar/scanner/dotnet-sonarscanner end `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
