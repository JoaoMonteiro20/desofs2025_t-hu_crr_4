name: Simulated IAST with ZAP and Coverage

on:
  push:
    branches: [resolve-dast]
  pull_request:
    branches: [main]

jobs:
  iast:
    name: Simulated IAST
    runs-on: ubuntu-latest

    services:
      sql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: "YourStrong!Passw0rd"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore EcoImpactSimulator.sln

      - name: Build API Docker image
        run: docker build -t ecoimpact-api -f EcoImpact.API/Dockerfile .

      - name: Run API container
        run: |
          docker network create ecoimpact-net
          docker run -d --name ecoimpact-api \
            --network ecoimpact-net \
            -e ASPNETCORE_ENVIRONMENT=Development \
            -e ConnectionStrings__DefaultConnection="Server=sql,1433;Database=EcoImpactDb;User=sa;Password=YourStrong!Passw0rd;Encrypt=False;TrustServerCertificate=True;" \
            -p 7020:7020 \
            ecoimpact-api

      - name: Wait for API to be ready
        run: sleep 20

      - name: Run OWASP ZAP Baseline Scan (Simulated IAST)
        run: |
          mkdir -p zap-results
          docker run --rm \
            --network ecoimpact-net \
            -v ${{ github.workspace }}/zap-results:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
              -t http://ecoimpact-api:7020 \
              -r zap-report.html \
              -w zap-report.md \
              -J zap-report.json \
              -a \
              --autooff

      - name: Run Unit Tests with Coverage (Simulated Runtime Analysis)
        run: |
          mkdir -p test-results/coverage
          dotnet test EcoImpactSimulator.sln \
            --collect:"XPlat Code Coverage" \
            --results-directory ./test-results/coverage \
            --logger trx

      - name: Upload ZAP Results
        uses: actions/upload-artifact@v4
        with:
          name: zap-results
          path: zap-results

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results
          path: test-results/coverage
